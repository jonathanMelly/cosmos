//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Volumes/nFo/data/etml/codespace/csharp/cosmos/src/lib/../grammar/Cosmos.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace lib.antlr {
#pragma warning disable 3021

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICosmosListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class CosmosBaseListener : ICosmosListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.programme"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgramme([NotNull] CosmosParser.ProgrammeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.programme"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgramme([NotNull] CosmosParser.ProgrammeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.entete"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntete([NotNull] CosmosParser.EnteteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.entete"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntete([NotNull] CosmosParser.EnteteContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.auteur"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAuteur([NotNull] CosmosParser.AuteurContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.auteur"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAuteur([NotNull] CosmosParser.AuteurContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.date"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDate([NotNull] CosmosParser.DateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.date"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDate([NotNull] CosmosParser.DateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.entreprise"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntreprise([NotNull] CosmosParser.EntrepriseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.entreprise"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntreprise([NotNull] CosmosParser.EntrepriseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.description"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDescription([NotNull] CosmosParser.DescriptionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.description"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDescription([NotNull] CosmosParser.DescriptionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.mainStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMainStart([NotNull] CosmosParser.MainStartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.mainStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMainStart([NotNull] CosmosParser.MainStartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.mainEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMainEnd([NotNull] CosmosParser.MainEndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.mainEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMainEnd([NotNull] CosmosParser.MainEndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.instruction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruction([NotNull] CosmosParser.InstructionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.instruction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruction([NotNull] CosmosParser.InstructionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.instruction_simple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruction_simple([NotNull] CosmosParser.Instruction_simpleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.instruction_simple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruction_simple([NotNull] CosmosParser.Instruction_simpleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.instruction_complexe"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruction_complexe([NotNull] CosmosParser.Instruction_complexeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.instruction_complexe"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruction_complexe([NotNull] CosmosParser.Instruction_complexeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.afficher"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAfficher([NotNull] CosmosParser.AfficherContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.afficher"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAfficher([NotNull] CosmosParser.AfficherContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.allouer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAllouer([NotNull] CosmosParser.AllouerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.allouer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAllouer([NotNull] CosmosParser.AllouerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.affecter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAffecter([NotNull] CosmosParser.AffecterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.affecter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAffecter([NotNull] CosmosParser.AffecterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.la_zone_memoire"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLa_zone_memoire([NotNull] CosmosParser.La_zone_memoireContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.la_zone_memoire"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLa_zone_memoire([NotNull] CosmosParser.La_zone_memoireContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.une_zone_memoire"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUne_zone_memoire([NotNull] CosmosParser.Une_zone_memoireContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.une_zone_memoire"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUne_zone_memoire([NotNull] CosmosParser.Une_zone_memoireContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.boucle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoucle([NotNull] CosmosParser.BoucleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.boucle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoucle([NotNull] CosmosParser.BoucleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.boucle_avec_variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoucle_avec_variable([NotNull] CosmosParser.Boucle_avec_variableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.boucle_avec_variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoucle_avec_variable([NotNull] CosmosParser.Boucle_avec_variableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.selection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelection([NotNull] CosmosParser.SelectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.selection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelection([NotNull] CosmosParser.SelectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.base_si"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBase_si([NotNull] CosmosParser.Base_siContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.base_si"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBase_si([NotNull] CosmosParser.Base_siContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.sinon_si"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSinon_si([NotNull] CosmosParser.Sinon_siContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.sinon_si"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSinon_si([NotNull] CosmosParser.Sinon_siContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.sinon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSinon([NotNull] CosmosParser.SinonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.sinon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSinon([NotNull] CosmosParser.SinonContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] CosmosParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] CosmosParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.expression_comparable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_comparable([NotNull] CosmosParser.Expression_comparableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.expression_comparable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_comparable([NotNull] CosmosParser.Expression_comparableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.expression_booleenne"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_booleenne([NotNull] CosmosParser.Expression_booleenneContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.expression_booleenne"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_booleenne([NotNull] CosmosParser.Expression_booleenneContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.expression_numerique"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_numerique([NotNull] CosmosParser.Expression_numeriqueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.expression_numerique"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_numerique([NotNull] CosmosParser.Expression_numeriqueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.expression_textuelle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_textuelle([NotNull] CosmosParser.Expression_textuelleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.expression_textuelle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_textuelle([NotNull] CosmosParser.Expression_textuelleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.atome_textuel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtome_textuel([NotNull] CosmosParser.Atome_textuelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.atome_textuel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtome_textuel([NotNull] CosmosParser.Atome_textuelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.atome_numerique"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtome_numerique([NotNull] CosmosParser.Atome_numeriqueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.atome_numerique"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtome_numerique([NotNull] CosmosParser.Atome_numeriqueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.nombre_aleatoire"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNombre_aleatoire([NotNull] CosmosParser.Nombre_aleatoireContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.nombre_aleatoire"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNombre_aleatoire([NotNull] CosmosParser.Nombre_aleatoireContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] CosmosParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] CosmosParser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.chaine_de_caractere"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChaine_de_caractere([NotNull] CosmosParser.Chaine_de_caractereContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.chaine_de_caractere"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChaine_de_caractere([NotNull] CosmosParser.Chaine_de_caractereContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CosmosParser.nombre"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNombre([NotNull] CosmosParser.NombreContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CosmosParser.nombre"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNombre([NotNull] CosmosParser.NombreContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace lib.antlr
