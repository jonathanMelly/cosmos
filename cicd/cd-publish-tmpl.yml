#run integration tests (to be run on each target platform)
parameters:
  - name: 'runtime'
    type: string

steps:
  - template: version-step.yml
  - task: DotNetCoreCLI@2
    displayName: 'Publish ${{ parameters.runtime }} $(Build.SourceBranchName)'
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '$(commandline_project)'
      arguments: '/p:version=$(version.CleanValue) -c Release -r ${{ parameters.runtime }} -p:PublishReadyToRun=true -o $(Build.ArtifactStagingDirectory)/${{ parameters.runtime }}'
      zipAfterPublish: false
      modifyOutputPath: false

  # add testProgram
  - bash: cp -v $(Build.Repository.LocalPath)/$(valid_program) $(Build.ArtifactStagingDirectory)/${{ parameters.runtime }}/
    displayName: Add $(valid_program)

  # zip (and on success removes original files)
  - bash: zip -rmTv $(Build.ArtifactStagingDirectory)/$(artifact_prefix)-${{ parameters.runtime }}.zip $(Build.ArtifactStagingDirectory)/${{ parameters.runtime }}
    displayName: Zipping

  # Transform generated zip to azure artifacts
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: '$(artifact_prefix)-${{ parameters.runtime }}'
      publishLocation: 'Container'
