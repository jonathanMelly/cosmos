#Builds and test regular commits
name: '$(TeamProject)-$(BuildDefinitionName)[$(SourceBranchName)] du $(Date:dd.MM.yyyy) a $(Date:hh)h$(Date:mm)m$(Date:ss)s'

trigger:
  - master

variables:
- group: platform

- name: source_directory
  value: '$(System.DefaultWorkingDirectory)/src'

- name: solution_file
  value: '$(source_directory)/cosmos.sln'

- name: test_directory
  value: '$(source_directory)/test'

- name: test_project
  value: '$(test_directory)/test.csproj'

- name: tools_directory
  value: '$(System.DefaultWorkingDirectory)/_tools'

- name: coverage_summary_files
  value: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'

- name: coverage_report_directory
  value: '$(System.DefaultWorkingDirectory)/_coverage'

stages:

  - stage: BuildTestAndCover
    pool:
      #needs windows for report generator...
      vmImage: $(vm_windows)
    jobs:
      - job: All
        steps:
          #Added regarding issues with dotnet cli on windows azure agent...
          - task: DotNetCoreCLI@2
            displayName: "Manual restore nuget"
            inputs:
              command: 'restore'
              projects: '$(solution_file)'
              feedsToUse: 'select'
              verbosityRestore: 'Minimal'

          - task: DotNetCoreCLI@2
            displayName: 'Build'
            inputs:
              command: 'build'
              projects: '$(solution_file)'
              arguments: '--no-restore'

          - task: DotNetCoreCLI@2
            displayName: 'Unit Tests: run'
            inputs:
              command: 'test'
              projects: '$(test_project)'
              arguments: '--collect:"Xplat Code Coverage"'
              publishTestResults: true #published into $(Agent.TempDirectory)
              testRunTitle: 'All tests'

          - script: |
              dotnet tool install dotnet-reportgenerator-globaltool --tool-path $(tools_directory)
              $(tools_directory)/reportgenerator -classfilters:"-lib.antlr.*" -reports:"$(coverage_summary_files)" -targetdir:"$(coverage_report_directory)" -reporttypes:"HtmlInline_AzurePipelines;Cobertura;Badges"
            failOnStderr: false
            continueOnError: true
            displayName: 'Unit Tests: generate coverage'

          - task: PublishCodeCoverageResults@1
            displayName: 'Unit Tests: publish coverage'
            inputs:
              codeCoverageTool: 'Cobertura'
              summaryFileLocation: '$(coverage_report_directory)Cobertura.xml'
              #if not supplied, then beware of auto(re)generation :Â https://github.com/microsoft/azure-pipelines-tasks/issues/10354
              reportDirectory: '$(coverage_report_directory)'
              failIfCoverageEmpty: false

  - stage: Windows
    dependsOn: BuildTestAndCover
    pool:
      vmImage: $(vm_windows)
    jobs:
    - job: IT
      steps:
        - template: ci-itest-tmpl.yml
          parameters:
            platform: $(runtime_windows)

  - stage: Linux
    dependsOn: BuildTestAndCover
    pool:
      vmImage: $(vm_ubuntu)
    jobs:
    - job: IT
      steps:
        - template: ci-itest-tmpl.yml
          parameters:
            platform: $(runtime_linux)

  - stage: Mac
    dependsOn: BuildTestAndCover
    pool:
      vmImage: $(vm_mac)
    jobs:
    - job: IT
      steps:
        - template: ci-itest-tmpl.yml
          parameters:
            platform: $(runtime_mac)