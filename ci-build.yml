# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
#- script: dotnet build $(solution_file)
#  displayName: 'Build solution'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(solution_file)'

#Must publish for code coverage dll...
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(test_project)'
    zipAfterPublish: false
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(test_project)'
    arguments: '--collect:"Xplat Code Coverage"'
    publishTestResults: true
    testRunTitle: 'All tests'

#Integration test (retcode indicates if failed)
- script: |
      echo Starting integration test
      dotnet run -r win-x64 --project src/interpreter/interpreter.csproj src/test/data/ValidProgram.cosmos
      echo End of integration test
  #workingDirectory: #
  displayName: 'Integration tests'
  failOnStderr: true



